<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongbao.mobile.modules.user.dao.UserOauthDao">
    
	<sql id="userOauthColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.open_id AS "openId",
		a.union_id AS "unionId",
		a.access_token AS "accessToken",
		a.refresh_token AS "refreshToken",
		a.expires_in AS "expiresIn",
		a.source AS "source",
		a.login_num AS "loginNum",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="userOauthJoins">
		
	</sql>
    
	<select id="get" resultType="UserOauth">
		SELECT 
			<include refid="userOauthColumns"/>
		FROM user_oauth a
		<include refid="userOauthJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UserOauth">
		SELECT 
			<include refid="userOauthColumns"/>
		FROM user_oauth a
		<include refid="userOauthJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<!-- 用户id -->
			<if test="userId != null and '' != userId">
				and a.user_id = #{userId,jdbcType=VARCHAR}
			</if>
			<!-- 第三方登录id -->
			<if test="openId != null and '' != openId">
				and a.open_id = #{openId,jdbcType=VARCHAR}
			</if>
			<!-- 注册来源 -->
			<if test="source != null and '' != source">
				and a.source = #{source,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="findAllList" resultType="UserOauth">
		SELECT 
			<include refid="userOauthColumns"/>
		FROM user_oauth a
		<include refid="userOauthJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO user_oauth(
			id,
			user_id,
			open_id,
			union_id,
			access_token,
			refresh_token,
			expires_in,
			source,
			login_num,
			create_date,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{userId},
			#{openId},
			#{unionId},
			#{accessToken},
			#{refreshToken},
			#{expiresIn},
			#{source},
			#{loginNum},
			#{createDate},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE user_oauth SET 	
			user_id = #{userId},
			open_id = #{openId},
			union_id = #{unionId},
			access_token = #{accessToken},
			refresh_token = #{refreshToken},
			expires_in = #{expiresIn},
			source = #{source},
			login_num = #{loginNum},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE user_oauth SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>